[tool.poetry]
name = "gopad"
version = "0.0.0"
description = "Gopad OpenAPI"

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "Natural Language :: English",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Utilities",
  "Topic :: Software Development",
]

authors = [
  "Thomas Boerger <thomas@webhippie.de>"
]

license = "Apache-2.0"
readme = "README.md"

repository = "https://github.com/gopad/gopad-python"

keywords = [
  "OpenAPI",
  "OpenAPI-Generator",
  "Etherpad",
  "Gopad"
]

include = [
  "LICENSE",
  "gopad/py.typed"
]

[tool.poetry.dependencies]
python = "^3.7"

urllib3 = ">= 1.25.3"
python-dateutil = ">=2.8.2"
pydantic = ">=2"
typing-extensions = ">=4.7.1"

[tool.poetry.group.dev.dependencies]
ruff = "0.4.5"
pytest = ">=7.2.1"
types-python-dateutil = ">=2.8.19.14"

[tool.poetry-dynamic-versioning]
enable = true
style = "semver"
vcs = "git"

[tool.pytest.ini_options]
addopts = "test/"
filterwarnings = [
  "ignore::FutureWarning",
  "ignore::DeprecationWarning",
  "ignore:.*pep8.*:FutureWarning",
]

[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]

[tool.ruff]
exclude = [
  ".direnv",
  ".devenv",
  ".git",
  "__pycache__",
  "build",
  "dist",
  "test",
  "*.pyc",
  "*.egg-info",
  ".cache",
  ".eggs",
  "venv",
]

line-length = 120
indent-width = 4

[tool.ruff.lint]
ignore = [
  "D205",
  "D400",
  "D401",
  "D415",
]

select = [
  "D",
  "E",
  "F",
  "Q",
  "W",
  "I",
  "S",
  "BLE",
  "N",
  "UP",
  "B",
  "A",
  "C4",
  "T20",
  "SIM",
  "RET",
  "ARG",
  "ERA",
  "RUF",
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
